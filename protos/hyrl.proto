syntax = "proto3";

package hyrl;

service ObstacleAvoidanceService {
  rpc SetEnvironment(SetEnvironmentRequest) returns (SetEnvironmentResponse);
  rpc GetDirection(DirectionRequest) returns (DirectionResponse);
}

message DirectionRequest {
  DroneState drone_state = 1;
}

message DroneState {
  float x = 1;
  float y = 2;
  float z = 3;
}

message DirectionResponse {
  oneof control_type {
    DiscreteHeading discrete_heading = 2;
    ContinuousHeading continuous_heading = 3;
  }
}

message DiscreteHeading {
  HeadingDirection direction = 1;
}

enum HeadingDirection {
  STRAIGHT = 0;
  LEFT = 1;
  HARD_LEFT = 2;
  RIGHT = 3;
  HARD_RIGHT = 4;
}

message ContinuousHeading {
  float rad = 1;
}

// DEFINE ENVIRONMENT REQUEST
message SetEnvironmentRequest {
  repeated Polygon2D obstacles = 1;
}


message Polygon2D {
  repeated Point2D points = 1;
}

message Point2D {
  float x = 1;
  float y = 2;
}

// DEFINE ENVIRONMENT RESPONSE
message SetEnvironmentResponse {
  string message = 1;
}
